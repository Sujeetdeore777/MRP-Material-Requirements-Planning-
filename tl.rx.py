df = workbook.add_format({'num_format': 'dd/mm/yy'})
nf = workbook.add_format({'num_format': '0.00'})
nfi = workbook.add_format({'num_format': '0'})
nft = workbook.add_format({'num_format': '0.00', 'bg_color': 'green'})
bd = workbook.add_format({'bold': True, 'align': 'right'})
boldra = workbook.add_format({'bold': True, 'bg_color': 'yellow', 'align': 'right'})
nfg = workbook.add_format({'num_format': '0.00', 'bg_color': '#C8E6C9'})
nfr = workbook.add_format({'num_format': '0.00', 'bg_color': '#FFCDD2'})
nfgray = workbook.add_format({'num_format': '0.00', 'bg_color': '#DCD5D4'})

sheetf = workbook.add_worksheet( "Statement" )
sheet = workbook.add_worksheet( "Trial Balance" )
sheetnz = workbook.add_worksheet( "Schedules" )

sheet.write(0, 0, "Report", bold)
sheet.write(0, 1, "Transaction Ledger Report")
sheet.write(1, 0, "Period From:", bold)
sheet.write(1, 1, o.fromdate, df)
sheet.write(2, 0, "Period To:", bold)
sheet.write(2, 1, o.todate, df)

sheet.write(4, 0, "Account", boldra)
# sheet.write(4, 1, "OpDr", boldra)
# sheet.write(4, 2, "OpCr", boldra)
sheet.write(4, 3, "OpNet", boldra)
sheet.write(4, 4, "PeriodDr", boldra)
sheet.write(4, 5, "PeriodCr", boldra)
sheet.write(4, 6, "PeriodNet", boldra)
# sheet.write(4, 7, "CloseDr", boldra)
# sheet.write(4, 8, "CloseCr", boldra)
sheet.write(4, 9, "CloseNet", boldra)

sheet.write(4, 11, "ERPBillAdj", boldra)
# sheet.write(4, 12, "CloseNet", boldra)

sheet.set_column( 0, 0, 35 )
r = 6


sheetnz.write(0, 0, "Report", bold)
sheetnz.write(0, 1, "Transaction Ledger Report")
sheetnz.write(1, 0, "Period From:", bold)
sheetnz.write(1, 1, o.fromdate, df)
sheetnz.write(2, 0, "Period To:", bold)
sheetnz.write(2, 1, o.todate, df)

sheetnz.write(4, 0, "Account", boldra)
# sheet.write(4, 1, "OpDr", boldra)
# sheet.write(4, 2, "OpCr", boldra)
sheetnz.write(4, 3, "OpNet", boldra)
sheetnz.write(4, 4, "PeriodDr", boldra)
sheetnz.write(4, 5, "PeriodCr", boldra)
sheetnz.write(4, 6, "PeriodNet", boldra)
# sheet.write(4, 7, "CloseDr", boldra)
# sheet.write(4, 8, "CloseCr", boldra)
sheetnz.write(4, 9, "CloseNet", boldra)

sheetnz.write(4, 11, "ERPBillAdj", boldra)
# sheet.write(4, 12, "CloseNet", boldra)

sheetnz.set_column( 0, 0, 35 )
nzr = 6


sheetf.write(0, 0, "Profit & Loss Statement", bold)
sheetf.write(0, 3, o.fromdate, df)
sheetf.write(0, 4, "to")
sheetf.write(0, 5, o.todate, df)

sheetf.write(2, 0, "", bold )
sheetf.write(2, 1, "", bold )
sheetf.write(2, 2, "Expenditure", bold )
sheetf.write(2, 3, "", bold )
sheetf.write(2, 4, "", bold )
sheetf.write(2, 5, "Income", bold )

sheetf.set_column( 0, 0, 35 )
sheetf.set_column( 1, 2, 12 )
sheetf.set_column( 3, 3, 35 )
sheetf.set_column( 4, 5, 12 )


ats = Account.ACCOUNT_TYPES
#def addPLBSdetails( self,  nfg, nfr, nf, bold, sheetf, sheet, o, r, bs,    d, at(at,      atname) , sfr, sfc, sfc1, dm )

r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ( ats[ 20 ][ 0 ], 'Opening Stock' ), 3, 0, 1, 1, True )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 5 ], 4, 0, 1, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ( ats[ 20 ][ 0 ], 'Closing Stock (Less)' ), 5, 0, 1, 1, False, True )
sheetf.write(6, 0, "Cost of Goods Sold (COGS)", bd )
sheetf.write_formula(6, 2, '=B4+B5-B6', nfg )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 2 ], 8, 0, 2, 1 )

r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 6 ], 4, 3, 5, -1 )
sheetf.write(9, 0, "", nfgray )
sheetf.write(9, 1, "", nfgray )
sheetf.write_formula(9, 2, '=C7+C9', nfgray )
sheetf.write(9, 3, "", nfgray )
sheetf.write(9, 4, "", nfgray )
sheetf.write_formula(9, 5, '=F5', nfgray )

sheetf.write(10, 0, "", nfgray )
sheetf.write(10, 1, "Gross Profit:", nfgray )
sheetf.write_formula(10, 2, '=F10-C10', nfg )
sheetf.write(10, 3, "", nfgray )
sheetf.write(10, 4, "", nfgray )
sheetf.write(10, 5, "", nfgray )

r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 3 ], 11, 0, 2, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 7 ], 11, 3, 5, -1 )
sheetf.write(12, 0, "", nfgray )
sheetf.write(12, 1, "Net Profit:", nfgray )
sheetf.write_formula(12, 2, '=C11+F12-C12', nfg )
sheetf.write(12, 3, "", nfgray )
sheetf.write(12, 4, "", nfgray )
sheetf.write(12, 5, "", nfgray )

rf = 14
sheetf.write(rf, 0, "Balance Sheet", bold)
sheetf.write(rf, 4, "as on")
sheetf.write(rf, 5, o.todate, df)

rf = 16
sheetf.write(rf, 0, "", bold )
sheetf.write(rf, 1, "", bold )
sheetf.write(rf, 2, "Liabilities", bold )
sheetf.write(rf, 3, "", bold )
sheetf.write(rf, 4, "", bold )
sheetf.write(rf, 5, "Assets", bold )

r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 11 ], 17, 0, 2, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, False, 0, ats[ 21 ], 18, 0, 2, -1 )
sheetf.write(19, 0, "Net Profit", bd )
sheetf.write_formula(19, 2, '=C13', nfg )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 12 ], 20, 0, 2, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[  4 ], 21, 0, 1, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[  8 ], 22, 0, 1, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, -1, ( ats[ 0 ][ 0 ], 'Creditors' ), 23, 0, 1, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 14 ], 24, 0, 1, -1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 16 ], 25, 0, 1, -1 )
sheetf.write(27, 0, "Current Liabilities", bd )
sheetf.write_formula(27, 2, '=SUM(B22:B27)', nfg )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 19 ], 28, 0, 2, -1 )

r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 17 ], 17, 3, 5, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 18 ], 18, 3, 5, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ( ats[  1 ][ 0 ], 'Funds and Bank' ), 20, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 10 ], 21, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 1, ( ats[  0 ][ 0 ], 'Debtors' ), 22, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 13 ], 23, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[  9 ], 24, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ats[ 15 ], 25, 3, 4, 1 )
r = self.addPLBSdetails(    nfg, nfr, nf, bold, sheetf, sheet, o, r, True, 0, ( ats[ 20 ][ 0 ], 'Stock in hand' ), 26, 3, 4, 1 )
sheetf.write(27, 3, "Current Assets", bd )
sheetf.write_formula(27, 5, '=SUM(E21:E27)', nfg )

rf = 29
sheetf.write(rf, 0, "", nfgray )
sheetf.write(rf, 1, "", nfgray )
sheetf.write_formula(rf, 2, '=SUM(C18:C29)', nfg )
sheetf.write(rf, 3, "", nfgray )
sheetf.write(rf, 4, "", nfgray )
sheetf.write_formula(rf, 5, '=SUM(F18:F29)', nfg )
rf = 30
sheetf.write(rf, 0, "", nfgray )
sheetf.write(rf, 1, "", nfgray )
sheetf.write(rf, 2, "", nfgray )
sheetf.write(rf, 3, "Diff. in Balancing:", nfgray )
sheetf.write(rf, 4, "", nfgray )
sheetf.write_formula(rf, 5, '=C30-F30', nfg )
